name: Build and Publish a Docker Image

on:
  workflow_call:
    inputs:
      major_version:
        required: true
        type: string
        description: 'The major version number for the release.'
      minor_version:
        required: true
        type: string
        description: 'The minor version number for the release.'
      patch_version_starts_from:
        required: true
        type: string
        description: 'The starting number for the patch version series (e.g., "100", "200"). Must be a multiple of 100.'
      git_tag_name:
        required: true
        type: string
        description: 'Tag name for the Docker image.'
      services:
        required: true
        type: string
        description: 'A JSON array of service objects. Each object must have "service_name", "docker_file", and "context" keys.'

env:
  GITHUB_REGISTRY: ghcr.io
  ORGANIZATION: oneground

jobs:
  get-next-application-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_next_application_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up PowerShell
        uses: PSModule/install-powershell@v1
        with:
          Version: 7.5.0

      - name: Get next application version
        id: get_next_application_version
        shell: pwsh
        run: >-
          ./.github/scripts/Get-NextApplicationVersion.ps1
          -GitTagName "${{ inputs.git_tag_name }}"
          -MajorVersion "${{ inputs.major_version }}"
          -MinorVersion "${{ inputs.minor_version }}"
          -PatchVersionStartsFrom "${{ inputs.patch_version_starts_from }}"

  docker-build-push:
    needs: get-next-application-version
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJson(inputs.services) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for ${{ matrix.service.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.docker_file }}
          push: true
          provenance: false
          build-args: Version=${{ needs.get-next-application-version.outputs.specific_version }}
          tags: |
            "${{ env.GITHUB_REGISTRY }}/${{ env.ORGANIZATION }}/${{ matrix.service.service_name }}:${{ needs.get-next-application-version.outputs.specific_version }}"
            "${{ env.GITHUB_REGISTRY }}/${{ env.ORGANIZATION }}/${{ matrix.service.service_name }}:${{ needs.get-next-application-version.outputs.floating_version }}"

  create_git_tag:
    needs: [get-next-application-version, docker-build-push]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create and push Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "${{ inputs.git_tag_name }}@${{ needs.get-next-application-version.outputs.specific_version }}" -m "Specific version ${{ needs.get-next-application-version.outputs.specific_version }} for ${{ inputs.git_tag_name }}"
          git tag -f "${{ inputs.git_tag_name }}@${{ needs.get-next-application-version.outputs.floating_version }}" -m "Floating version ${{ needs.get-next-application-version.outputs.floating_version }} for ${{ inputs.git_tag_name }}"
          git push origin --tags -f