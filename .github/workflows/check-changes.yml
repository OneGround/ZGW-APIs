name: Check for File Changes

on:
  workflow_call:
    inputs:
      paths-to-check:
        description: 'A multi-line string of paths to check for changes.'
        required: true
        type: string
    outputs:
      any_changed:
        description: "True if relevant files have changed or it's not a PR."
        value: ${{ jobs.check-changes.outputs.any_changed }}

jobs:
  check-changes:
    name: Check for files changes
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get changed files
      id: changed-files
      env:
        PATHS_TO_CHECK: ${{ inputs.paths-to-check }}
      run: |
        # Always run the build for push or manual dispatch events
        if [[ "${{ github.event_name }}" != "pull_request" ]]; then
          echo "Not a PR. Assuming changes are relevant."
          echo "any_changed=true" >> "$GITHUB_OUTPUT"
          exit 0
        fi

        echo "Validating SHAs for PR #${{ github.event.pull_request.number }}"
        MERGE_BASE=$(git merge-base ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
        echo "Comparing HEAD (${{ github.event.pull_request.head.sha }}) against merge base ($MERGE_BASE)"

        # Read the multi-line string into a Bash array
        mapfile -t paths <<< "$PATHS_TO_CHECK"

        if [ ${#paths[@]} -eq 0 ]; then
          echo "No paths provided to check. Assuming no relevant changes."
          echo "any_changed=false" >> "$GITHUB_OUTPUT"
          exit 0
        fi

        # separate argument, correctly handling spaces or special characters.
        if ! git diff --quiet $MERGE_BASE ${{ github.event.pull_request.head.sha }} -- "${paths[@]}"; then
          echo "Changes detected in relevant paths."
          echo "any_changed=true" >> "$GITHUB_OUTPUT"
        else
          echo "No changes in relevant paths."
          echo "any_changed=false" >> "$GITHUB_OUTPUT"
        fi