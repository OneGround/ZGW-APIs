name: Create and publish a Docker image

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
        description: 'Name of the OneGround service'
      major_version:
        required: true
        type: string
      minor_version:
        required: true
        type: string
      docker_file:
        required: true
        type: string
        description: 'Path to the Dockerfile'
      context:
        required: true
        type: string
        description: 'Docker build context'
    secrets:
      DOCKERHUB_PASSWORD:
        required: true
      DOCKERHUB_USERNAME:
        required: true

env:
  GITHUB_REGISTRY: ghcr.io
  ORGANIZATION: oneground

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Install PowerShell
        uses: PSModule/install-powershell@v1
        with:
          Version: 7.5.0

      - name: Get next application version
        id: get_application_version
        shell: pwsh
        run: >-
          ./.github/scripts/get-next-application-version.ps1
          -ServiceName "${{ inputs.service_name }}"
          -MajorVersion "${{ inputs.major_version }}"
          -MinorVersion "${{ inputs.minor_version }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.docker_file }}
          push: true
          provenance: false
          tags: |
            ${{ env.GITHUB_REGISTRY }}/${{ env.ORGANIZATION }}/${{ inputs.service_name }}:${{ steps.get_application_version.outputs.version }}

      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "${{ inputs.service_name }}@${{ steps.get_application_version.outputs.version }}" -m "Release version ${{ steps.get_application_version.outputs.version }} for ${{ inputs.service_name }}"
          git push origin "${{ inputs.service_name }}@${{ steps.get_application_version.outputs.version }}"
