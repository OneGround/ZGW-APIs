{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Warning",
        "Microsoft.AspNetCore.Authentication": "Warning",
        "System.Net.Http.HttpClient": "Warning"
      }
    }
  },
  "Application": {
    "SkipMigrationsAtStartup": false,
    "DontCheckServerValidation": false,
    "DontSendNotificaties": false,
    "IgnoreZaakValidation": false,
    "IgnoreBesluitTypeValidation": false,
    "IgnoreInformatieObjectValidation": false,
    "BesluitenPageSize": 100,
    "DrcSynchronizationTimeoutSeconds": 8,
    "DrcSynchronizationAsyncOnlyMode": false,
    "ApplyFixturesAtStartup": false,
    "CachedSecretExpirationTime": "00:03:00",
    "AudittrailRetrieveForRsins": [],
    "AudittrailRecordRetrieveList": false,
    "AudittrailRecordRetrieveMinimal": false,
    "ResolveForwardedHost": true,
    "NummerGeneratorFormats": {
      "besluiten": "B{yyyy}-{v^8}"
    },
    "ExpandSettings": {
      "List": "none",
      "Search": "none",
      "Get": "all"
    }
  },
  "ServiceAgentsConfig": {
    "ZTC": { // Note: This setting will overrule the default: MaxRetryAttempts:3; BackoffType: "Exponential"; Delay: "00:00:02"; Timeout 00:00:30
      "Retry": {
        "ShouldRetryAfterHeader": false, // If the property is set to true then the generator will resolve the delay based on the Retry-After header rules, otherwise it will return null and the retry strategy delay will generate the delay based on the configured options.
        "MaxRetryAttempts": 1,
        "BackoffType": "Constant", // Constant, Linear or Exponential
        "UseJitter": false, // A value indicating whether jitter should be used when calculating the backoff delay between retries.
        "Delay": "00:00:00.100" // This property is used to cap the maximum delay between retries. It is useful when you want to limit the maximum delay after a certain number of retries when it could reach a unreasonably high values, especially if "DelayBackoffType.Exponential" backoff is used.
      },
      "Timeout": {
        "Timeout": "00:00:30"
      }
    }
  }
}
