// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OneGround.ZGW.Notificaties.DataModel;

#nullable disable

namespace OneGround.ZGW.Notificaties.DataModel.Migrations
{
    [DbContext(typeof(NrcDbContext))]
    partial class NrcDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OneGround.ZGW.DataAccess.Migrations.FinishedDataMigration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ApplicationVersion")
                        .HasColumnType("text")
                        .HasColumnName("application_version");

                    b.Property<DateTime>("Executed")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("executed");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("finished_data_migrations");
                });

            modelBuilder.Entity("OneGround.ZGW.Notificaties.DataModel.Abonnement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Auth")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("auth");

                    b.Property<string>("CallbackUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("callbackurl");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.HasKey("Id");

                    b.ToTable("abonnementen");
                });

            modelBuilder.Entity("OneGround.ZGW.Notificaties.DataModel.AbonnementKanaal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AbonnementId")
                        .HasColumnType("uuid")
                        .HasColumnName("abonnement_id");

                    b.Property<Guid>("KanaalId")
                        .HasColumnType("uuid")
                        .HasColumnName("kanaal_id");

                    b.HasKey("Id");

                    b.HasIndex("AbonnementId");

                    b.HasIndex("KanaalId");

                    b.ToTable("abonnementkanalen");
                });

            modelBuilder.Entity("OneGround.ZGW.Notificaties.DataModel.FilterValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AbonnementKanaalId")
                        .HasColumnType("uuid")
                        .HasColumnName("abonnement_kanaal_id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("key");

                    b.Property<string>("Value")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("AbonnementKanaalId");

                    b.ToTable("filtervalues");
                });

            modelBuilder.Entity("OneGround.ZGW.Notificaties.DataModel.Kanaal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("DocumentatieLink")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("documentatielink");

                    b.Property<string[]>("Filters")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("filters");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("naam");

                    b.HasKey("Id");

                    b.HasIndex("Naam")
                        .IsUnique();

                    b.ToTable("kanalen");
                });

            modelBuilder.Entity("OneGround.ZGW.Notificaties.DataModel.AbonnementKanaal", b =>
                {
                    b.HasOne("OneGround.ZGW.Notificaties.DataModel.Abonnement", "Abonnement")
                        .WithMany("AbonnementKanalen")
                        .HasForeignKey("AbonnementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneGround.ZGW.Notificaties.DataModel.Kanaal", "Kanaal")
                        .WithMany("AbonnementKanalen")
                        .HasForeignKey("KanaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abonnement");

                    b.Navigation("Kanaal");
                });

            modelBuilder.Entity("OneGround.ZGW.Notificaties.DataModel.FilterValue", b =>
                {
                    b.HasOne("OneGround.ZGW.Notificaties.DataModel.AbonnementKanaal", "AbonnementKanaal")
                        .WithMany("Filters")
                        .HasForeignKey("AbonnementKanaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AbonnementKanaal");
                });

            modelBuilder.Entity("OneGround.ZGW.Notificaties.DataModel.Abonnement", b =>
                {
                    b.Navigation("AbonnementKanalen");
                });

            modelBuilder.Entity("OneGround.ZGW.Notificaties.DataModel.AbonnementKanaal", b =>
                {
                    b.Navigation("Filters");
                });

            modelBuilder.Entity("OneGround.ZGW.Notificaties.DataModel.Kanaal", b =>
                {
                    b.Navigation("AbonnementKanalen");
                });
#pragma warning restore 612, 618
        }
    }
}
