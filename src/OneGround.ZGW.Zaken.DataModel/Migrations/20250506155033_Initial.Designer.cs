// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OneGround.ZGW.Zaken.DataModel;

#nullable disable

namespace OneGround.ZGW.Zaken.DataModel.Migrations
{
    [DbContext(typeof(ZrcDbContext))]
    [Migration("20250506155033_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:CollationDefinition:ci_collation", "@colStrength=secondary,@colStrength=secondary,icu,False")
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgcrypto");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OneGround.ZGW.DataAccess.AuditTrail.AuditTrailRegel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("AanmaakDatum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("aanmaakdatum");

                    b.Property<string>("Actie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("actie");

                    b.Property<string>("ActieWeergave")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("actieweergave");

                    b.Property<string>("ApplicatieId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("applicatie_id");

                    b.Property<string>("ApplicatieWeergave")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("applicatieweergave");

                    b.Property<string>("Bron")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("bron");

                    b.Property<string>("GebruikersId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("gebruikers_id");

                    b.Property<string>("GebruikersWeergave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("gebruikersweergave");

                    b.Property<string>("HoofdObject")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("hoofdobject");

                    b.Property<Guid?>("HoofdObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("hoofdobject_id");

                    b.Property<string>("Nieuw")
                        .HasColumnType("jsonb")
                        .HasColumnName("nieuw");

                    b.Property<string>("Oud")
                        .HasColumnType("jsonb")
                        .HasColumnName("oud");

                    b.Property<string>("RequestId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("request_id");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("resource");

                    b.Property<string>("ResourceUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("resourceurl");

                    b.Property<string>("ResourceWeergave")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("resourceweergave");

                    b.Property<int>("Resultaat")
                        .HasColumnType("integer")
                        .HasColumnName("resultaat");

                    b.Property<string>("Toelichting")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("toelichting");

                    b.HasKey("Id");

                    b.HasIndex("HoofdObjectId");

                    b.ToTable("audittrail");
                });

            modelBuilder.Entity("OneGround.ZGW.DataAccess.Migrations.FinishedDataMigration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ApplicationVersion")
                        .HasColumnType("text")
                        .HasColumnName("application_version");

                    b.Property<DateTime>("Executed")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("executed");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("finished_data_migrations");
                });

            modelBuilder.Entity("OneGround.ZGW.DataAccess.NumberGenerator.OrganisatieNummer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("EntiteitNaam")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("entiteit");

                    b.Property<string>("Formaat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("formaat");

                    b.Property<long>("HuidigNummer")
                        .HasColumnType("bigint")
                        .HasColumnName("huidig_nummer");

                    b.Property<string>("HuidigNummerEntiteit")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("huidig_nummer_entiteit");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("Rsin")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("rsin");

                    b.HasKey("Id");

                    b.ToTable("organisatie_nummers");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.AanduidingWozObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AoaHuisletter")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("aoahuisletter");

                    b.Property<int>("AoaHuisnummer")
                        .HasColumnType("integer")
                        .HasColumnName("aoahuisnummer");

                    b.Property<string>("AoaHuisnummerToevoeging")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("aoahuisnummertoevoeging");

                    b.Property<string>("AoaIdentificatie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("aoaidentificatie");

                    b.Property<string>("AoaPostcode")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("aoapostcode");

                    b.Property<string>("GorOpenbareRuimteNaam")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("goropenbareruimtenaam");

                    b.Property<string>("LocatieOmschrijving")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("locatieomschrijving");

                    b.Property<string>("WplWoonplaatsNaam")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("wplwoonplaatsnaam");

                    b.HasKey("Id");

                    b.ToTable("woz_object_aanduidingen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.AdresZaakObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("GorOpenbareRuimteNaam")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("goropenbareruimtenaam");

                    b.Property<string>("Huisletter")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("huisletter");

                    b.Property<int>("Huisnummer")
                        .HasColumnType("integer")
                        .HasColumnName("huisnummer");

                    b.Property<string>("HuisnummerToevoeging")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("huisnummertoevoeging");

                    b.Property<string>("Identificatie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("identificatie");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("Postcode")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("postcode");

                    b.Property<string>("WplWoonplaatsNaam")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("wplwoonplaatsnaam");

                    b.Property<Guid>("ZaakObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakobject_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakObjectId")
                        .IsUnique();

                    b.ToTable("zaakobjecten_adressen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.BuurtZaakObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("BuurtCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("buurtcode");

                    b.Property<string>("BuurtNaam")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("buurtnaam");

                    b.Property<string>("GemGemeenteCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("gemgemeentecode");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("WykWijkCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("wykwijkcode");

                    b.Property<Guid>("ZaakObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakobject_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakObjectId")
                        .IsUnique();

                    b.ToTable("zaakobjecten_buurten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ContactpersoonRol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("EmailAdres")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)")
                        .HasColumnName("emailadres");

                    b.Property<string>("Functie")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("functie");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("naam");

                    b.Property<string>("Telefoonnummer")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefoonnummer");

                    b.HasKey("Id");

                    b.ToTable("contactpersoonrollen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.GemeenteZaakObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("GemeenteCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("gemeentecode");

                    b.Property<string>("GemeenteNaam")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("gemeentenaam");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ZaakObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakobject_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakObjectId")
                        .IsUnique();

                    b.ToTable("zaakobjecten_gemeenten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.KadastraleOnroerendeZaakObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("KadastraleAanduiding")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("kadastraleaanduiding");

                    b.Property<string>("KadastraleIdentificatie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("kadastraleidentificatie");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ZaakObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakobject_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakObjectId")
                        .IsUnique();

                    b.ToTable("zaakobjecten_kadastrale_onroerende_zaken");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.KlantContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateTime>("DatumTijd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datum_tijd");

                    b.Property<string>("Identificatie")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("identificatie");

                    b.Property<string>("Kanaal")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("kanaal");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Onderwerp")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("onderwerp");

                    b.Property<string>("Toelichting")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("toelichting");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakId");

                    b.ToTable("klantcontacten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.MedewerkerZaakRol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Achternaam")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("achternaam");

                    b.Property<string>("Identificatie")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)")
                        .HasColumnName("identificatie");

                    b.Property<string>("Voorletters")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("voorletters");

                    b.Property<string>("VoorvoegselAchternaam")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("voorvoegselachternaam");

                    b.Property<Guid>("ZaakRolId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakrol_id");

                    b.HasKey("Id");

                    b.HasIndex("Identificatie");

                    b.HasIndex("ZaakRolId")
                        .IsUnique();

                    b.ToTable("zaakrollen_medewerkers");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.NatuurlijkPersoonZaakRol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AnpIdentificatie")
                        .HasMaxLength(17)
                        .HasColumnType("character varying(17)")
                        .HasColumnName("anpidentificatie");

                    b.Property<DateTime?>("Geboortedatum")
                        .HasColumnType("date")
                        .HasColumnName("geboortedatum");

                    b.Property<short?>("Geslachtsaanduiding")
                        .HasColumnType("smallint")
                        .HasColumnName("geslachtsaanduiding");

                    b.Property<string>("Geslachtsnaam")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("geslachtsnaam");

                    b.Property<string>("InpANummer")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("inpanummer");

                    b.Property<string>("InpBsn")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("inpbsn");

                    b.Property<Guid?>("SubVerblijfBuitenlandId")
                        .HasColumnType("uuid")
                        .HasColumnName("subverblijfbuitenland_id");

                    b.Property<Guid?>("VerblijfsadresId")
                        .HasColumnType("uuid")
                        .HasColumnName("verblijfsadres_id");

                    b.Property<string>("Voorletters")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("voorletters");

                    b.Property<string>("Voornamen")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("voornamen");

                    b.Property<string>("VoorvoegselGeslachtsnaam")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("voorvoegselgeslachtsnaam");

                    b.Property<Guid>("ZaakRolId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakrol_id");

                    b.HasKey("Id");

                    b.HasIndex("AnpIdentificatie");

                    b.HasIndex("InpANummer");

                    b.HasIndex("InpBsn");

                    b.HasIndex("SubVerblijfBuitenlandId");

                    b.HasIndex("VerblijfsadresId");

                    b.HasIndex("ZaakRolId")
                        .IsUnique();

                    b.ToTable("zaakrollen_natuurlijk_personen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.NietNatuurlijkPersoonZaakRol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AnnIdentificatie")
                        .HasMaxLength(17)
                        .HasColumnType("character varying(17)")
                        .HasColumnName("annidentificatie");

                    b.Property<string>("Bezoekadres")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("bezoekadres");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("InnNnpId")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("innnnpid");

                    b.Property<short?>("InnRechtsvorm")
                        .HasColumnType("smallint")
                        .HasColumnName("innrechtsvorm");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("StatutaireNaam")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("statutairenaam");

                    b.Property<Guid?>("SubVerblijfBuitenlandId")
                        .HasColumnType("uuid")
                        .HasColumnName("subverblijfbuitenland_id");

                    b.Property<Guid>("ZaakRolId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakrol_id");

                    b.HasKey("Id");

                    b.HasIndex("AnnIdentificatie");

                    b.HasIndex("InnNnpId");

                    b.HasIndex("SubVerblijfBuitenlandId");

                    b.HasIndex("ZaakRolId")
                        .IsUnique();

                    b.ToTable("zaakrollen_niet_natuurlijk_personen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.NotAnEntity", b =>
                {
                    b.ToView(null);

                    b.ToSqlQuery("SELECT 1");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ObjectTypeOverigeDefinitie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ObjectData")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("objectdata");

                    b.Property<string>("Schema")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("schema");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("url");

                    b.Property<Guid>("ZaakObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakobject_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakObjectId")
                        .IsUnique();

                    b.ToTable("objecttype_overige_definities");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.OrganisatorischeEenheidZaakRol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Identificatie")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)")
                        .HasColumnName("identificatie");

                    b.Property<string>("IsGehuisvestIn")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)")
                        .HasColumnName("isgehuisvestin");

                    b.Property<string>("Naam")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("naam");

                    b.Property<Guid>("ZaakRolId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakrol_id");

                    b.HasKey("Id");

                    b.HasIndex("Identificatie");

                    b.HasIndex("ZaakRolId")
                        .IsUnique();

                    b.ToTable("zaakrollen_organisatorische_eenheden");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.OverigeZaakObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("OverigeData")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("overigedata");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ZaakObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakobject_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakObjectId")
                        .IsUnique();

                    b.ToTable("zaakobjecten_overigen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.PandZaakObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Identificatie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("identificatie");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ZaakObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakobject_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakObjectId")
                        .IsUnique();

                    b.ToTable("zaakobjecten_panden");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.RelevanteAndereZaak", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AardRelatie")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("aardrelatie");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("url");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakId");

                    b.ToTable("relevanteanderezaken");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.SubVerblijfBuitenland", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("LndLandcode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("lndlandcode");

                    b.Property<string>("LndLandnaam")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("lndlandnaam");

                    b.Property<string>("SubAdresBuitenland1")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("subadresbuitenland1");

                    b.Property<string>("SubAdresBuitenland2")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("subadresbuitenland2");

                    b.Property<string>("SubAdresBuitenland3")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("subadresbuitenland3");

                    b.HasKey("Id");

                    b.ToTable("subverblijfbuitenland");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.TerreinGebouwdObjectZaakObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AdresAanduidingGrp_AoaHuisletter")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("adresaanduidinggrp_aoahuisletter");

                    b.Property<int>("AdresAanduidingGrp_AoaHuisnummer")
                        .HasColumnType("integer")
                        .HasColumnName("adresaanduidinggrp_aoahuisnummer");

                    b.Property<string>("AdresAanduidingGrp_AoaHuisnummertoevoeging")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("adresaanduidinggrp_aoahuisnummertoevoeging");

                    b.Property<string>("AdresAanduidingGrp_AoaPostcode")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("adresaanduidinggrp_aoapostcode");

                    b.Property<string>("AdresAanduidingGrp_GorOpenbareRuimteNaam")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("adresaanduidinggrp_goropenbareruimtenaam");

                    b.Property<string>("AdresAanduidingGrp_NumIdentificatie")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adresaanduidinggrp_numidentificatie");

                    b.Property<string>("AdresAanduidingGrp_OaoIdentificatie")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adresaanduidinggrp_oaoidentificatie");

                    b.Property<string>("AdresAanduidingGrp_OgoLocatieAanduiding")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adresaanduidinggrp_ogolocatieaanduiding");

                    b.Property<string>("AdresAanduidingGrp_WplWoonplaatsNaam")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("adresaanduidinggrp_wplwoonplaatsnaam");

                    b.Property<string>("Identificatie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("identificatie");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ZaakObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakobject_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakObjectId")
                        .IsUnique();

                    b.ToTable("zaakobjecten_terreingebouwdobjectzaakobjecten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.Verblijfsadres", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AoaHuisletter")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("aoahuisletter");

                    b.Property<int>("AoaHuisnummer")
                        .HasColumnType("integer")
                        .HasColumnName("aoahuisnummer");

                    b.Property<string>("AoaHuisnummertoevoeging")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("aoahuisnummertoevoeging");

                    b.Property<string>("AoaIdentificatie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("aoaidentificatie");

                    b.Property<string>("AoaPostcode")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("aoapostcode");

                    b.Property<string>("GorOpenbareRuimteNaam")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("goropenbareruimtenaam");

                    b.Property<string>("InpLocatiebeschrijving")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("inplocatiebeschrijving");

                    b.Property<string>("WplWoonplaatsNaam")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("wplwoonplaatsnaam");

                    b.HasKey("Id");

                    b.ToTable("verblijfsadresen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.VestigingZaakRol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<List<string>>("Handelsnaam")
                        .HasColumnType("text[]")
                        .HasColumnName("handelsnaam");

                    b.Property<string>("KvkNummer")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("kvknummer");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid?>("SubVerblijfBuitenlandId")
                        .HasColumnType("uuid")
                        .HasColumnName("subverblijfbuitenland_id");

                    b.Property<Guid?>("VerblijfsadresId")
                        .HasColumnType("uuid")
                        .HasColumnName("verblijfsadres_id");

                    b.Property<string>("VestigingsNummer")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)")
                        .HasColumnName("vestigingsnummer");

                    b.Property<Guid>("ZaakRolId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakrol_id");

                    b.HasKey("Id");

                    b.HasIndex("SubVerblijfBuitenlandId");

                    b.HasIndex("VerblijfsadresId");

                    b.HasIndex("VestigingsNummer");

                    b.HasIndex("ZaakRolId")
                        .IsUnique();

                    b.ToTable("zaakrollen_vestigingen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.WozObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("AanduidingWozObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("aanduidingwozobject_id");

                    b.Property<string>("WozObjectNummer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("wozobjectnummer");

                    b.HasKey("Id");

                    b.HasIndex("AanduidingWozObjectId");

                    b.ToTable("woz_objecten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.WozWaardeZaakObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("IsVoorId")
                        .HasColumnType("uuid")
                        .HasColumnName("woz_object_id");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("WaardePeildatum")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("waardepeildatum");

                    b.Property<Guid>("ZaakObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaakobject_id");

                    b.HasKey("Id");

                    b.HasIndex("IsVoorId");

                    b.HasIndex("ZaakObjectId")
                        .IsUnique();

                    b.ToTable("zaakobjecten_woz_waarden");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.Zaak", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("Archiefactiedatum")
                        .HasColumnType("date")
                        .HasColumnName("archiefactiedatum");

                    b.Property<short?>("Archiefnominatie")
                        .HasMaxLength(50)
                        .HasColumnType("smallint")
                        .HasColumnName("archiefnominatie");

                    b.Property<short>("Archiefstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("archiefstatus");

                    b.Property<short>("BetalingsIndicatie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("betalingsindicatie");

                    b.Property<string>("BetalingsindicatieWeergave")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("betalingsindicatieweergave");

                    b.Property<string>("Bronorganisatie")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("bronorganisatie");

                    b.Property<string>("Communicatiekanaal")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("communicatiekanaal");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateOnly?>("Einddatum")
                        .HasColumnType("date")
                        .HasColumnName("einddatum");

                    b.Property<DateOnly?>("EinddatumGepland")
                        .HasColumnType("date")
                        .HasColumnName("einddatumgepland");

                    b.Property<Guid?>("HoofdzaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("hoofdzaak_id");

                    b.Property<string>("Identificatie")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("identificatie");

                    b.Property<DateTime?>("LaatsteBetaaldatum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("laatstebetaaldatum");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Omschrijving")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("omschrijving");

                    b.Property<string>("OpdrachtgevendeOrganisatie")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("opdrachtgevendeorganisatie");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("Processobjectaard")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("processobjectaard");

                    b.Property<List<string>>("ProductenOfDiensten")
                        .HasColumnType("text[]")
                        .HasColumnName("productenofdiensten");

                    b.Property<DateOnly?>("Publicatiedatum")
                        .HasColumnType("date")
                        .HasColumnName("publicatiedatum");

                    b.Property<DateOnly?>("Registratiedatum")
                        .HasColumnType("date")
                        .HasColumnName("registratiedatum");

                    b.Property<string>("Selectielijstklasse")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("selectielijstklasse");

                    b.Property<DateOnly>("Startdatum")
                        .HasColumnType("date")
                        .HasColumnName("startdatum");

                    b.Property<DateOnly?>("StartdatumBewaartermijn")
                        .HasColumnType("date")
                        .HasColumnName("startdatumbewaartermijn");

                    b.Property<string>("Toelichting")
                        .HasColumnType("text")
                        .HasColumnName("toelichting");

                    b.Property<DateOnly?>("UiterlijkeEinddatumAfdoening")
                        .HasColumnType("date")
                        .HasColumnName("uiterlijkeeinddatumafdoening");

                    b.Property<string>("VerantwoordelijkeOrganisatie")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("verantwoordelijkeorganisatie");

                    b.Property<short>("VertrouwelijkheidAanduiding")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("vertrouwelijkheidaanduiding");

                    b.Property<Geometry>("Zaakgeometrie")
                        .HasColumnType("geometry")
                        .HasColumnName("zaakgeometrie");

                    b.Property<string>("Zaaktype")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("zaaktype")
                        .UseCollation("ci_collation");

                    b.HasKey("Id");

                    b.HasIndex("Archiefactiedatum");

                    b.HasIndex("Archiefnominatie");

                    b.HasIndex("Archiefstatus");

                    b.HasIndex("HoofdzaakId");

                    b.HasIndex("Identificatie");

                    b.HasIndex("Owner");

                    b.HasIndex("Startdatum");

                    b.HasIndex("Zaakgeometrie");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Zaakgeometrie"), "gist");

                    b.HasIndex("Zaaktype");

                    b.HasIndex("Bronorganisatie", "Identificatie")
                        .IsUnique();

                    b.HasIndex("Id", "HoofdzaakId");

                    b.HasIndex("Owner", "Identificatie");

                    b.ToTable("zaken");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakAuthorization", b =>
                {
                    b.Property<string>("ZaakType")
                        .HasColumnType("text");

                    b.Property<int>("MaximumVertrouwelijkheidAanduiding")
                        .HasColumnType("integer");

                    b.HasKey("ZaakType");

                    b.ToTable("#ZaakAuthorization", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakBesluit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Besluit")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("besluit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakId");

                    b.ToTable("zaakbesluiten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakContactmoment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Contactmoment")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("contactmoment")
                        .UseCollation("ci_collation");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("Contactmoment");

                    b.HasIndex("Owner");

                    b.HasIndex("ZaakId");

                    b.ToTable("zaakcontactmomenten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakEigenschap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("Eigenschap")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("eigenschap");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("naam");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("Waarde")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("waarde");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("Owner");

                    b.HasIndex("ZaakId");

                    b.ToTable("zaakeigenschappen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakInformatieObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<short>("AardRelatieWeergave")
                        .HasColumnType("smallint")
                        .HasColumnName("aardrelatieweergave");

                    b.Property<string>("Beschrijving")
                        .HasColumnType("text")
                        .HasColumnName("beschrijving");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("InformatieObject")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("informatieobject")
                        .UseCollation("ci_collation");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<DateTime>("RegistratieDatum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registratiedatum");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uuid")
                        .HasColumnName("status_id");

                    b.Property<string>("Titel")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("titel");

                    b.Property<DateTime?>("VernietigingsDatum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("vernietigingsdatum");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("InformatieObject");

                    b.HasIndex("Owner");

                    b.HasIndex("StatusId");

                    b.HasIndex("ZaakId");

                    b.ToTable("zaakinformatieobjecten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakKenmerk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Bron")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("bron");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("Kenmerk")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("kenmerk");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakId");

                    b.ToTable("zaakkenmerken");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Object")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("object")
                        .UseCollation("ci_collation");

                    b.Property<short>("ObjectType")
                        .HasColumnType("smallint")
                        .HasColumnName("objecttype");

                    b.Property<string>("ObjectTypeOverige")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("objecttypeoverige");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("RelatieOmschrijving")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("relatieomschrijving");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.Property<string>("ZaakObjectType")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("zaakobjecttype");

                    b.HasKey("Id");

                    b.HasIndex("Object");

                    b.HasIndex("ObjectType");

                    b.HasIndex("Owner");

                    b.HasIndex("ZaakId");

                    b.ToTable("zaakobjecten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakOpschorting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.Property<bool>("Indicatie")
                        .HasColumnType("boolean")
                        .HasColumnName("indicatie");

                    b.Property<string>("Reden")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("reden");

                    b.HasKey("Id");

                    b.ToTable("zaakopschortingen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakProcessobject", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.Property<string>("Datumkenmerk")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("datumkenmerk");

                    b.Property<string>("Identificatie")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("identificatie");

                    b.Property<string>("Objecttype")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("objecttype");

                    b.Property<string>("Registratie")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("registratie");

                    b.HasKey("Id");

                    b.ToTable("zaakprocessobjecten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakResultaat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("ResultaatType")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("resultaattype")
                        .UseCollation("ci_collation");

                    b.Property<string>("Toelichting")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("toelichting");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("Owner");

                    b.HasIndex("ResultaatType");

                    b.HasIndex("ZaakId")
                        .IsUnique();

                    b.ToTable("zaakresultaten");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakRol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AfwijkendeNaamBetrokkene")
                        .HasMaxLength(625)
                        .HasColumnType("character varying(625)")
                        .HasColumnName("afwijkendeNaamBetrokkene");

                    b.Property<string>("Betrokkene")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("betrokkene")
                        .UseCollation("ci_collation");

                    b.Property<short>("BetrokkeneType")
                        .HasColumnType("smallint")
                        .HasColumnName("betrokkenetype");

                    b.Property<Guid?>("ContactpersoonRolId")
                        .HasColumnType("uuid")
                        .HasColumnName("contactpersoonrol_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<short?>("IndicatieMachtiging")
                        .HasColumnType("smallint")
                        .HasColumnName("indicatiemachtiging");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("omschrijving");

                    b.Property<short>("OmschrijvingGeneriek")
                        .HasColumnType("smallint")
                        .HasColumnName("omschrijvinggeneriek");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<DateTime>("Registratiedatum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registratiedatum");

                    b.Property<string>("RolType")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("roltype")
                        .UseCollation("ci_collation");

                    b.Property<string>("Roltoelichting")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("roltoelichting");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("Betrokkene");

                    b.HasIndex("BetrokkeneType");

                    b.HasIndex("ContactpersoonRolId");

                    b.HasIndex("Omschrijving");

                    b.HasIndex("OmschrijvingGeneriek");

                    b.HasIndex("Owner");

                    b.HasIndex("RolType");

                    b.HasIndex("ZaakId");

                    b.ToTable("zaakrollen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateTime>("DatumStatusGezet")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datumstatusgezet");

                    b.Property<string>("GezetDoor")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("gezetdoor");

                    b.Property<bool?>("IndicatieLaatstGezetteStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("indicatielaatstgezettestatus");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("StatusToelichting")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("statustoelichting");

                    b.Property<string>("StatusType")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("statustype")
                        .UseCollation("ci_collation");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("Owner");

                    b.HasIndex("StatusType");

                    b.HasIndex("ZaakId");

                    b.ToTable("zaakstatussen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakVerlenging", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<Period>("Duur")
                        .IsRequired()
                        .HasColumnType("interval")
                        .HasColumnName("duur");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("Reden")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("reden");

                    b.HasKey("Id");

                    b.ToTable("zaakverlengingen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakVerzoek", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("Verzoek")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("verzoek")
                        .UseCollation("ci_collation");

                    b.Property<Guid>("ZaakId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaak_id");

                    b.HasKey("Id");

                    b.HasIndex("Owner");

                    b.HasIndex("Verzoek");

                    b.HasIndex("ZaakId");

                    b.ToTable("zaakverzoeken");
                });

            modelBuilder.Entity("Thinktecture.EntityFrameworkCore.TempTables.TempTable<string>", b =>
                {
                    b.Property<string>("Column1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("#TempTable<string>", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.AdresZaakObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakObject", "ZaakObject")
                        .WithOne("Adres")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.AdresZaakObject", "ZaakObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.BuurtZaakObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakObject", "ZaakObject")
                        .WithOne("Buurt")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.BuurtZaakObject", "ZaakObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.GemeenteZaakObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakObject", "ZaakObject")
                        .WithOne("Gemeente")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.GemeenteZaakObject", "ZaakObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.KadastraleOnroerendeZaakObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakObject", "ZaakObject")
                        .WithOne("KadastraleOnroerendeZaak")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.KadastraleOnroerendeZaakObject", "ZaakObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.KlantContact", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany("KlantContacten")
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.MedewerkerZaakRol", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakRol", "ZaakRol")
                        .WithOne("Medewerker")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.MedewerkerZaakRol", "ZaakRolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakRol");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.NatuurlijkPersoonZaakRol", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.SubVerblijfBuitenland", "SubVerblijfBuitenland")
                        .WithMany()
                        .HasForeignKey("SubVerblijfBuitenlandId");

                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Verblijfsadres", "Verblijfsadres")
                        .WithMany()
                        .HasForeignKey("VerblijfsadresId");

                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakRol", "ZaakRol")
                        .WithOne("NatuurlijkPersoon")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.NatuurlijkPersoonZaakRol", "ZaakRolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubVerblijfBuitenland");

                    b.Navigation("Verblijfsadres");

                    b.Navigation("ZaakRol");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.NietNatuurlijkPersoonZaakRol", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.SubVerblijfBuitenland", "SubVerblijfBuitenland")
                        .WithMany()
                        .HasForeignKey("SubVerblijfBuitenlandId");

                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakRol", "ZaakRol")
                        .WithOne("NietNatuurlijkPersoon")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.NietNatuurlijkPersoonZaakRol", "ZaakRolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubVerblijfBuitenland");

                    b.Navigation("ZaakRol");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ObjectTypeOverigeDefinitie", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakObject", "ZaakObject")
                        .WithOne("ObjectTypeOverigeDefinitie")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.ObjectTypeOverigeDefinitie", "ZaakObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.OrganisatorischeEenheidZaakRol", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakRol", "ZaakRol")
                        .WithOne("OrganisatorischeEenheid")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.OrganisatorischeEenheidZaakRol", "ZaakRolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakRol");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.OverigeZaakObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakObject", "ZaakObject")
                        .WithOne("Overige")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.OverigeZaakObject", "ZaakObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.PandZaakObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakObject", "ZaakObject")
                        .WithOne("Pand")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.PandZaakObject", "ZaakObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.RelevanteAndereZaak", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany("RelevanteAndereZaken")
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.TerreinGebouwdObjectZaakObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakObject", "ZaakObject")
                        .WithOne("TerreinGebouwdObject")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.TerreinGebouwdObjectZaakObject", "ZaakObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.VestigingZaakRol", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.SubVerblijfBuitenland", "SubVerblijfBuitenland")
                        .WithMany()
                        .HasForeignKey("SubVerblijfBuitenlandId");

                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Verblijfsadres", "Verblijfsadres")
                        .WithMany()
                        .HasForeignKey("VerblijfsadresId");

                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakRol", "ZaakRol")
                        .WithOne("Vestiging")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.VestigingZaakRol", "ZaakRolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubVerblijfBuitenland");

                    b.Navigation("Verblijfsadres");

                    b.Navigation("ZaakRol");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.WozObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.AanduidingWozObject", "AanduidingWozObject")
                        .WithMany()
                        .HasForeignKey("AanduidingWozObjectId");

                    b.Navigation("AanduidingWozObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.WozWaardeZaakObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.WozObject", "IsVoor")
                        .WithMany()
                        .HasForeignKey("IsVoorId");

                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakObject", "ZaakObject")
                        .WithOne("WozWaardeObject")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.WozWaardeZaakObject", "ZaakObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IsVoor");

                    b.Navigation("ZaakObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.Zaak", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Hoofdzaak")
                        .WithMany("Deelzaken")
                        .HasForeignKey("HoofdzaakId");

                    b.Navigation("Hoofdzaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakBesluit", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany("ZaakBesluiten")
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakContactmoment", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany()
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakEigenschap", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany("ZaakEigenschappen")
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakInformatieObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ZaakStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany("ZaakInformatieObjecten")
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakKenmerk", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany("Kenmerken")
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakObject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany("ZaakObjecten")
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakOpschorting", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithOne("Opschorting")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.ZaakOpschorting", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakProcessobject", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithOne("Processobject")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.ZaakProcessobject", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakResultaat", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithOne("Resultaat")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.ZaakResultaat", "ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakRol", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.ContactpersoonRol", "ContactpersoonRol")
                        .WithMany()
                        .HasForeignKey("ContactpersoonRolId");

                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany("ZaakRollen")
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactpersoonRol");

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakStatus", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany("ZaakStatussen")
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakVerlenging", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithOne("Verlenging")
                        .HasForeignKey("OneGround.ZGW.Zaken.DataModel.ZaakVerlenging", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakVerzoek", b =>
                {
                    b.HasOne("OneGround.ZGW.Zaken.DataModel.Zaak", "Zaak")
                        .WithMany()
                        .HasForeignKey("ZaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaak");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.Zaak", b =>
                {
                    b.Navigation("Deelzaken");

                    b.Navigation("Kenmerken");

                    b.Navigation("KlantContacten");

                    b.Navigation("Opschorting");

                    b.Navigation("Processobject");

                    b.Navigation("RelevanteAndereZaken");

                    b.Navigation("Resultaat");

                    b.Navigation("Verlenging");

                    b.Navigation("ZaakBesluiten");

                    b.Navigation("ZaakEigenschappen");

                    b.Navigation("ZaakInformatieObjecten");

                    b.Navigation("ZaakObjecten");

                    b.Navigation("ZaakRollen");

                    b.Navigation("ZaakStatussen");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakObject", b =>
                {
                    b.Navigation("Adres");

                    b.Navigation("Buurt");

                    b.Navigation("Gemeente");

                    b.Navigation("KadastraleOnroerendeZaak");

                    b.Navigation("ObjectTypeOverigeDefinitie");

                    b.Navigation("Overige");

                    b.Navigation("Pand");

                    b.Navigation("TerreinGebouwdObject");

                    b.Navigation("WozWaardeObject");
                });

            modelBuilder.Entity("OneGround.ZGW.Zaken.DataModel.ZaakRol", b =>
                {
                    b.Navigation("Medewerker");

                    b.Navigation("NatuurlijkPersoon");

                    b.Navigation("NietNatuurlijkPersoon");

                    b.Navigation("OrganisatorischeEenheid");

                    b.Navigation("Vestiging");
                });
#pragma warning restore 612, 618
        }
    }
}
