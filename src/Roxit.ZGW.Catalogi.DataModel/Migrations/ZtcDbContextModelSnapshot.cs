// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Roxit.ZGW.Catalogi.DataModel;

#nullable disable

namespace Roxit.ZGW.Catalogi.DataModel.Migrations
{
    [DbContext(typeof(ZtcDbContext))]
    partial class ZtcDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.BesluitType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly>("BeginGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("begingeldigheid");

                    b.Property<DateOnly?>("BeginObject")
                        .HasColumnType("date")
                        .HasColumnName("beginObject");

                    b.Property<string>("BesluitCategorie")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("besluitcategorie");

                    b.Property<Guid>("CatalogusId")
                        .HasColumnType("uuid")
                        .HasColumnName("catalogus_id");

                    b.Property<bool>("Concept")
                        .HasColumnType("boolean")
                        .HasColumnName("concept");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateOnly?>("EindeGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("eindegeldigheid");

                    b.Property<DateOnly?>("EindeObject")
                        .HasColumnType("date")
                        .HasColumnName("eindeObject");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Omschrijving")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("omschrijving");

                    b.Property<string>("OmschrijvingGeneriek")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("omschrijvinggeneriek");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<bool>("PublicatieIndicatie")
                        .HasColumnType("boolean")
                        .HasColumnName("publicatieindicatie");

                    b.Property<string>("PublicatieTekst")
                        .HasColumnType("text")
                        .HasColumnName("publicatietekst");

                    b.Property<Period>("PublicatieTermijn")
                        .HasColumnType("interval")
                        .HasColumnName("publicatietermijn");

                    b.Property<Period>("ReactieTermijn")
                        .HasColumnType("interval")
                        .HasColumnName("reactietermijn");

                    b.Property<string>("Toelichting")
                        .HasColumnType("text")
                        .HasColumnName("toelichting");

                    b.HasKey("Id");

                    b.HasIndex("CatalogusId");

                    b.ToTable("besluittypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.BesluitTypeInformatieObjectType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("BesluitTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("besluittype_id");

                    b.Property<string>("InformatieObjectTypeOmschrijving")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("informatieobjecttype_omschrijving");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.HasKey("Id");

                    b.HasIndex("BesluitTypeId", "InformatieObjectTypeOmschrijving")
                        .IsUnique();

                    b.ToTable("besluittypeinformatieobjecttypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.BronDatumArchiefProcedure", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("resulttype_id");

                    b.Property<int>("Afleidingswijze")
                        .HasColumnType("integer")
                        .HasColumnName("afleidingswijze");

                    b.Property<string>("DatumKenmerk")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("datumkenmerk");

                    b.Property<bool>("EindDatumBekend")
                        .HasColumnType("boolean")
                        .HasColumnName("einddatumbekend");

                    b.Property<int?>("ObjectType")
                        .HasColumnType("integer")
                        .HasColumnName("objecttype");

                    b.Property<Period>("ProcesTermijn")
                        .HasColumnType("interval")
                        .HasColumnName("procestermijn");

                    b.Property<string>("Registratie")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("registratie");

                    b.HasKey("Id");

                    b.ToTable("brondatumarchiefproceduren");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.Catalogus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("BegindatumVersie")
                        .HasColumnType("date")
                        .HasColumnName("begindatumVersie");

                    b.Property<string>("ContactpersoonBeheerEmailadres")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)")
                        .HasColumnName("contactpersoonbeheeremailadres");

                    b.Property<string>("ContactpersoonBeheerNaam")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("contactpersoonbeheernaam");

                    b.Property<string>("ContactpersoonBeheerTelefoonnummer")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("contactpersoonbeheertelefoonnummer");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("Domein")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("domein");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Naam")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("naam");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("Rsin")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("rsin");

                    b.Property<string>("Versie")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("versie");

                    b.HasKey("Id");

                    b.HasIndex("Owner", "Domein")
                        .IsUnique();

                    b.HasIndex("Rsin", "Domein")
                        .IsUnique();

                    b.ToTable("catalogussen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.Eigenschap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("BeginGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("begingeldigheid");

                    b.Property<DateOnly?>("BeginObject")
                        .HasColumnType("date")
                        .HasColumnName("beginObject");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("Definitie")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("definitie");

                    b.Property<DateOnly?>("EindeGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("eindegeldigheid");

                    b.Property<DateOnly?>("EindeObject")
                        .HasColumnType("date")
                        .HasColumnName("eindeObject");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("namm");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid?>("StatusTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("statustype_id");

                    b.Property<string>("Toelichting")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("toelichting");

                    b.Property<Guid>("ZaakTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.HasKey("Id");

                    b.HasIndex("StatusTypeId");

                    b.HasIndex("ZaakTypeId");

                    b.ToTable("eigenschappen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.EigenschapSpecificatie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("eigenschap_id");

                    b.Property<int>("Formaat")
                        .HasColumnType("integer")
                        .HasColumnName("formaat");

                    b.Property<string>("Groep")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("groep");

                    b.Property<string>("Kardinaliteit")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("kardinaliteit");

                    b.Property<string>("Lengte")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("lengte");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<List<string>>("Waardenverzameling")
                        .HasColumnType("text[]")
                        .HasColumnName("waardenverzameling");

                    b.HasKey("Id");

                    b.ToTable("eigenschappen_specificaties");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.InformatieObjectType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly>("BeginGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("begingeldigheid");

                    b.Property<DateOnly?>("BeginObject")
                        .HasColumnType("date")
                        .HasColumnName("beginObject");

                    b.Property<Guid>("CatalogusId")
                        .HasColumnType("uuid")
                        .HasColumnName("catalogus_id");

                    b.Property<bool>("Concept")
                        .HasColumnType("boolean")
                        .HasColumnName("concept");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateOnly?>("EindeGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("eindegeldigheid");

                    b.Property<DateOnly?>("EindeObject")
                        .HasColumnType("date")
                        .HasColumnName("eindeObject");

                    b.Property<string>("InformatieObjectCategorie")
                        .HasColumnType("text")
                        .HasColumnName("informatieobjectcategorie");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("omschrijving");

                    b.Property<OmschrijvingGeneriek>("OmschrijvingGeneriek")
                        .HasColumnType("jsonb")
                        .HasColumnName("omschrijvinggeneriek");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string[]>("Trefwoord")
                        .HasColumnType("text[]")
                        .HasColumnName("trefwoord");

                    b.Property<int>("VertrouwelijkheidAanduiding")
                        .HasMaxLength(50)
                        .HasColumnType("integer")
                        .HasColumnName("vertrouwelijkheidaanduiding");

                    b.HasKey("Id");

                    b.HasIndex("CatalogusId");

                    b.HasIndex("Concept");

                    b.HasIndex("CreationTime");

                    b.HasIndex("Omschrijving");

                    b.HasIndex("Owner");

                    b.HasIndex("Concept", "Omschrijving", "BeginGeldigheid");

                    b.ToTable("informatieobjecttypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ReferentieProces", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.Property<string>("Link")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("link");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("naam");

                    b.HasKey("Id");

                    b.ToTable("referentieprocessen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ResultaatType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Period>("ArchiefActieTermijn")
                        .HasColumnType("interval")
                        .HasColumnName("archiefactietermijn");

                    b.Property<short?>("ArchiefNominatie")
                        .HasColumnType("smallint")
                        .HasColumnName("archiefnominatie");

                    b.Property<DateOnly?>("BeginGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("begingeldigheid");

                    b.Property<DateOnly?>("BeginObject")
                        .HasColumnType("date")
                        .HasColumnName("beginObject");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateOnly?>("EindeGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("eindegeldigheid");

                    b.Property<DateOnly?>("EindeObject")
                        .HasColumnType("date")
                        .HasColumnName("eindeObject");

                    b.Property<bool?>("IndicatieSpecifiek")
                        .HasColumnType("boolean")
                        .HasColumnName("indicatieSpecifiek");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("omschrijving");

                    b.Property<string>("OmschrijvingGeneriek")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("omschrijvinggeneriek");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("ProcesObjectAard")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("procesobjectaard");

                    b.Property<Period>("ProcesTermijn")
                        .HasColumnType("interval")
                        .HasColumnName("procestermijn");

                    b.Property<string>("ResultaatTypeOmschrijving")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("resultaattypeomschrijving");

                    b.Property<string>("SelectieLijstKlasse")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("selectielijstklasse");

                    b.Property<string>("Toelichting")
                        .HasColumnType("text")
                        .HasColumnName("toelichting");

                    b.Property<Guid>("ZaakTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakTypeId");

                    b.ToTable("resultaattypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ResultaatTypeBesluitType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("BesluitTypeOmschrijving")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("besluittype_omschrijving");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ResultaatTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("resultaattype_id");

                    b.HasKey("Id");

                    b.HasIndex("ResultaatTypeId");

                    b.ToTable("resultaattypebesluittypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.RolType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("BeginGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("begingeldigheid");

                    b.Property<DateOnly?>("BeginObject")
                        .HasColumnType("date")
                        .HasColumnName("beginObject");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateOnly?>("EindeGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("eindegeldigheid");

                    b.Property<DateOnly?>("EindeObject")
                        .HasColumnType("date")
                        .HasColumnName("eindeObject");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("omschrijving");

                    b.Property<int>("OmschrijvingGeneriek")
                        .HasColumnType("integer")
                        .HasColumnName("omschrijvinggeneriek");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ZaakTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakTypeId");

                    b.ToTable("roltypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.StatusType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("BeginGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("begingeldigheid");

                    b.Property<DateOnly?>("BeginObject")
                        .HasColumnType("date")
                        .HasColumnName("beginObject");

                    b.Property<CheckListItemStatusType[]>("CheckListItemStatustypes")
                        .HasColumnType("jsonb")
                        .HasColumnName("checklistitemStatustype");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<Period>("Doorlooptijd")
                        .HasColumnType("interval")
                        .HasColumnName("doorlooptijd");

                    b.Property<DateOnly?>("EindeGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("eindegeldigheid");

                    b.Property<DateOnly?>("EindeObject")
                        .HasColumnType("date")
                        .HasColumnName("eindeObject");

                    b.Property<bool>("Informeren")
                        .HasColumnType("boolean")
                        .HasColumnName("informeren");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("omschrijving");

                    b.Property<string>("OmschrijvingGeneriek")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("omschrijvinggeneriek");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("StatusTekst")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("statustekst");

                    b.Property<string>("Toelichting")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("toelichting");

                    b.Property<int>("VolgNummer")
                        .HasColumnType("integer")
                        .HasColumnName("volgnummer");

                    b.Property<Guid>("ZaakTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakTypeId");

                    b.ToTable("statustypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.StatusTypeVerplichteEigenschap", b =>
                {
                    b.Property<Guid>("StatusTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("status_id");

                    b.Property<Guid>("EigenschapId")
                        .HasColumnType("uuid")
                        .HasColumnName("eigenschap_id");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.HasKey("StatusTypeId", "EigenschapId");

                    b.HasIndex("EigenschapId");

                    b.ToTable("statustype_verplichte_eigenschappen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakObjectType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("AnderObjectType")
                        .HasColumnType("boolean")
                        .HasColumnName("anderobjecttype");

                    b.Property<DateOnly>("BeginGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("begingeldigheid");

                    b.Property<DateOnly?>("BeginObject")
                        .HasColumnType("date")
                        .HasColumnName("beginobject");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<DateOnly?>("EindeGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("eindegeldigheid");

                    b.Property<DateOnly?>("EindeObject")
                        .HasColumnType("date")
                        .HasColumnName("eindeobject");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("objecttype");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("RelatieOmschrijving")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("relatieomschrijving");

                    b.Property<Guid>("ZaakTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.HasKey("Id");

                    b.HasIndex("AnderObjectType");

                    b.HasIndex("BeginGeldigheid");

                    b.HasIndex("EindeGeldigheid");

                    b.HasIndex("ObjectType");

                    b.HasIndex("Owner");

                    b.HasIndex("RelatieOmschrijving");

                    b.HasIndex("ZaakTypeId");

                    b.ToTable("zaakobjecttypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Aanleiding")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("aanleiding");

                    b.Property<DateOnly>("BeginGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("begingeldigheid");

                    b.Property<DateOnly?>("BeginObject")
                        .HasColumnType("date")
                        .HasColumnName("beginObject");

                    b.Property<BronCatalogus>("BronCatalogus")
                        .HasColumnType("jsonb")
                        .HasColumnName("broncatalogus");

                    b.Property<BronZaaktype>("BronZaaktype")
                        .HasColumnType("jsonb")
                        .HasColumnName("bronzaaktype");

                    b.Property<Guid>("CatalogusId")
                        .HasColumnType("uuid")
                        .HasColumnName("catalogus_id");

                    b.Property<bool>("Concept")
                        .HasColumnType("boolean")
                        .HasColumnName("concept");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("Doel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("doel");

                    b.Property<Period>("Doorlooptijd")
                        .IsRequired()
                        .HasColumnType("interval")
                        .HasColumnName("doorlooptijd");

                    b.Property<DateOnly?>("EindeGeldigheid")
                        .HasColumnType("date")
                        .HasColumnName("eindegeldigheid");

                    b.Property<DateOnly?>("EindeObject")
                        .HasColumnType("date")
                        .HasColumnName("eindeObject");

                    b.Property<string>("HandelingBehandelaar")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("handelingbehandelaar");

                    b.Property<string>("HandelingInitiator")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("handelinginitiator");

                    b.Property<string>("Identificatie")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("identificatie");

                    b.Property<short>("IndicatieInternOfExtern")
                        .HasColumnType("smallint")
                        .HasColumnName("indicatieinternofextern");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Omschrijving")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("omschrijving");

                    b.Property<string>("OmschrijvingGeneriek")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("omschrijvinggeneriek");

                    b.Property<string>("Onderwerp")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("onderwerp");

                    b.Property<bool>("OpschortingEnAanhoudingMogelijk")
                        .HasColumnType("boolean")
                        .HasColumnName("opschortingenaanhoudingmogelijk");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string[]>("ProductenOfDiensten")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("productenofdiensten");

                    b.Property<bool>("PublicatieIndicatie")
                        .HasColumnType("boolean")
                        .HasColumnName("publicatieindicatie");

                    b.Property<string>("PublicatieTekst")
                        .HasColumnType("text")
                        .HasColumnName("publicatietekst");

                    b.Property<string>("SelectielijstProcestype")
                        .HasColumnType("text")
                        .HasColumnName("selectielijstprocestype");

                    b.Property<Period>("Servicenorm")
                        .HasColumnType("interval")
                        .HasColumnName("servicenorm");

                    b.Property<string>("Toelichting")
                        .HasColumnType("text")
                        .HasColumnName("toelichting");

                    b.Property<string[]>("Trefwoorden")
                        .HasColumnType("text[]")
                        .HasColumnName("trefwoorden");

                    b.Property<string>("Verantwoordelijke")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("verantwoordelijke");

                    b.Property<string[]>("Verantwoordingsrelatie")
                        .HasColumnType("text[]")
                        .HasColumnName("verantwoordingsrelatie");

                    b.Property<bool>("VerlengingMogelijk")
                        .HasColumnType("boolean")
                        .HasColumnName("verlengingmogelijk");

                    b.Property<Period>("VerlengingsTermijn")
                        .HasColumnType("interval")
                        .HasColumnName("verlengingstermijn");

                    b.Property<DateOnly>("VersieDatum")
                        .HasColumnType("date")
                        .HasColumnName("versiedatum");

                    b.Property<short>("VertrouwelijkheidAanduiding")
                        .HasColumnType("smallint")
                        .HasColumnName("vertrouwelijkheidaanduiding");

                    b.HasKey("Id");

                    b.HasIndex("CatalogusId");

                    b.HasIndex("CreationTime");

                    b.ToTable("zaaktypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakTypeBesluitType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("BesluitTypeOmschrijving")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("besluittype_omschrijving");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<Guid>("ZaakTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakTypeId", "BesluitTypeOmschrijving")
                        .IsUnique();

                    b.ToTable("zaaktypebesluittypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakTypeDeelZaakType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("DeelZaakTypeIdentificatie")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("deelzaaktype_identificatie");

                    b.Property<Guid>("ZaakTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakTypeId", "DeelZaakTypeIdentificatie")
                        .IsUnique();

                    b.ToTable("zaaktypedeelzaaktypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakTypeGerelateerdeZaakType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<short>("AardRelatie")
                        .HasColumnType("smallint")
                        .HasColumnName("aardrelatie");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("GerelateerdeZaakTypeIdentificatie")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("gerelateerdezaaktype_identificatie");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<string>("Toelichting")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("toelichting");

                    b.Property<Guid>("ZaakTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.HasKey("Id");

                    b.HasIndex("ZaakTypeId", "GerelateerdeZaakTypeIdentificatie")
                        .IsUnique();

                    b.ToTable("zaaktypegerelateerdezaaktypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakTypeInformatieObjectType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<string>("InformatieObjectTypeOmschrijving")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("informatieobjecttype_omschrijving");

                    b.Property<DateTime?>("ModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modificationtime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("owner");

                    b.Property<int>("Richting")
                        .HasMaxLength(50)
                        .HasColumnType("integer")
                        .HasColumnName("richting");

                    b.Property<Guid?>("StatusTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("statustype_id");

                    b.Property<int>("VolgNummer")
                        .HasMaxLength(3)
                        .HasColumnType("integer")
                        .HasColumnName("volgnummer");

                    b.Property<Guid>("ZaakTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("zaaktype_id");

                    b.HasKey("Id");

                    b.HasIndex("StatusTypeId");

                    b.HasIndex("ZaakTypeId", "InformatieObjectTypeOmschrijving", "VolgNummer", "Richting")
                        .IsUnique();

                    b.ToTable("zaaktypeinformatieobjecttypen");
                });

            modelBuilder.Entity("Roxit.ZGW.DataAccess.AuditTrail.AuditTrailRegel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("AanmaakDatum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("aanmaakdatum");

                    b.Property<string>("Actie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("actie");

                    b.Property<string>("ActieWeergave")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("actieweergave");

                    b.Property<string>("ApplicatieId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("applicatie_id");

                    b.Property<string>("ApplicatieWeergave")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("applicatieweergave");

                    b.Property<string>("Bron")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("bron");

                    b.Property<string>("GebruikersId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("gebruikers_id");

                    b.Property<string>("GebruikersWeergave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("gebruikersweergave");

                    b.Property<string>("HoofdObject")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("hoofdobject");

                    b.Property<Guid?>("HoofdObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("hoofdobject_id");

                    b.Property<string>("Nieuw")
                        .HasColumnType("jsonb")
                        .HasColumnName("nieuw");

                    b.Property<string>("Oud")
                        .HasColumnType("jsonb")
                        .HasColumnName("oud");

                    b.Property<string>("RequestId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("request_id");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("resource");

                    b.Property<string>("ResourceUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("resourceurl");

                    b.Property<string>("ResourceWeergave")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("resourceweergave");

                    b.Property<int>("Resultaat")
                        .HasColumnType("integer")
                        .HasColumnName("resultaat");

                    b.Property<string>("Toelichting")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("toelichting");

                    b.HasKey("Id");

                    b.ToTable("audittrail");
                });

            modelBuilder.Entity("Roxit.ZGW.DataAccess.Migrations.FinishedDataMigration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ApplicationVersion")
                        .HasColumnType("text")
                        .HasColumnName("application_version");

                    b.Property<DateTime>("Executed")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("executed");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("finished_data_migrations");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.BesluitType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.Catalogus", "Catalogus")
                        .WithMany("BesluitTypes")
                        .HasForeignKey("CatalogusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogus");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.BesluitTypeInformatieObjectType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.BesluitType", "BesluitType")
                        .WithMany("BesluitTypeInformatieObjectTypen")
                        .HasForeignKey("BesluitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BesluitType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.BronDatumArchiefProcedure", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ResultaatType", "ResultaatType")
                        .WithOne("BronDatumArchiefProcedure")
                        .HasForeignKey("Roxit.ZGW.Catalogi.DataModel.BronDatumArchiefProcedure", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResultaatType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.Eigenschap", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.StatusType", "StatusType")
                        .WithMany()
                        .HasForeignKey("StatusTypeId");

                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithMany("Eigenschappen")
                        .HasForeignKey("ZaakTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusType");

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.EigenschapSpecificatie", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.Eigenschap", "Eigenschap")
                        .WithOne("Specificatie")
                        .HasForeignKey("Roxit.ZGW.Catalogi.DataModel.EigenschapSpecificatie", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eigenschap");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.InformatieObjectType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.Catalogus", "Catalogus")
                        .WithMany("InformatieObjectTypes")
                        .HasForeignKey("CatalogusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogus");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ReferentieProces", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithOne("ReferentieProces")
                        .HasForeignKey("Roxit.ZGW.Catalogi.DataModel.ReferentieProces", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ResultaatType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithMany("ResultaatTypen")
                        .HasForeignKey("ZaakTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ResultaatTypeBesluitType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ResultaatType", "ResultaatType")
                        .WithMany("ResultaatTypeBesluitTypen")
                        .HasForeignKey("ResultaatTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResultaatType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.RolType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithMany("RolTypen")
                        .HasForeignKey("ZaakTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.StatusType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithMany("StatusTypen")
                        .HasForeignKey("ZaakTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.StatusTypeVerplichteEigenschap", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.Eigenschap", "Eigenschap")
                        .WithMany("StatusTypeVerplichtEigenschappen")
                        .HasForeignKey("EigenschapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.StatusType", "StatusType")
                        .WithMany("StatusTypeVerplichteEigenschappen")
                        .HasForeignKey("StatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eigenschap");

                    b.Navigation("StatusType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakObjectType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithMany("ZaakObjectTypen")
                        .HasForeignKey("ZaakTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.Catalogus", "Catalogus")
                        .WithMany("ZaakTypes")
                        .HasForeignKey("CatalogusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogus");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakTypeBesluitType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithMany("ZaakTypeBesluitTypen")
                        .HasForeignKey("ZaakTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakTypeDeelZaakType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithMany("ZaakTypeDeelZaakTypen")
                        .HasForeignKey("ZaakTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakTypeGerelateerdeZaakType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithMany("ZaakTypeGerelateerdeZaakTypen")
                        .HasForeignKey("ZaakTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakTypeInformatieObjectType", b =>
                {
                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.StatusType", "StatusType")
                        .WithMany()
                        .HasForeignKey("StatusTypeId");

                    b.HasOne("Roxit.ZGW.Catalogi.DataModel.ZaakType", "ZaakType")
                        .WithMany("ZaakTypeInformatieObjectTypen")
                        .HasForeignKey("ZaakTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusType");

                    b.Navigation("ZaakType");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.BesluitType", b =>
                {
                    b.Navigation("BesluitTypeInformatieObjectTypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.Catalogus", b =>
                {
                    b.Navigation("BesluitTypes");

                    b.Navigation("InformatieObjectTypes");

                    b.Navigation("ZaakTypes");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.Eigenschap", b =>
                {
                    b.Navigation("Specificatie");

                    b.Navigation("StatusTypeVerplichtEigenschappen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ResultaatType", b =>
                {
                    b.Navigation("BronDatumArchiefProcedure");

                    b.Navigation("ResultaatTypeBesluitTypen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.StatusType", b =>
                {
                    b.Navigation("StatusTypeVerplichteEigenschappen");
                });

            modelBuilder.Entity("Roxit.ZGW.Catalogi.DataModel.ZaakType", b =>
                {
                    b.Navigation("Eigenschappen");

                    b.Navigation("ReferentieProces")
                        .IsRequired();

                    b.Navigation("ResultaatTypen");

                    b.Navigation("RolTypen");

                    b.Navigation("StatusTypen");

                    b.Navigation("ZaakObjectTypen");

                    b.Navigation("ZaakTypeBesluitTypen");

                    b.Navigation("ZaakTypeDeelZaakTypen");

                    b.Navigation("ZaakTypeGerelateerdeZaakTypen");

                    b.Navigation("ZaakTypeInformatieObjectTypen");
                });
#pragma warning restore 612, 618
        }
    }
}
